@model ConfiguratorWeb.App.Models.PositionViewModel
@using Digistat.FrameworkStd.Interfaces;
@using ConfiguratorWeb.App.Extensions
@{
   Layout = null;
   string strDialogID = "divPositionTabModal";
}




<script>
  function openBedSelection() {
    kendo.ui.progress($("#PositionEditWindow"), true);
    $.ajax({
      type: "POST",
      url: '@Url.Action("GetBedPosition", "Position", new { positionCode = Model.PositionCode })',
      data: JSON.stringify($("#linked-bed-grid").data().kendoGrid.dataSource.view()),
      contentType: "application/json; charset=utf-8",
      dataType: "json",
      success: function (data) {
        var wnd = kndWndBedDetails.data("kendoWindow");
        wnd.content('');
        wnd.content(data.content.Result);
        wnd.center().open();
      },
      error: function () {
      },
      complete: function () {
        kendo.ui.progress($("#PositionEditWindow"), false);
      }
    });
  }

  function setDomainSelectionGrid() {
    var dtSource = $("#linked-bed-grid").data().kendoGrid.dataSource.view();
    for (var i = 0; i < dtSource.length; i++) {
      console.log(dtSource[i].BedCode);
    }
  }

  function onDataBoundBeds(arg) {
    mergeGridRows("linked-bed-grid", '@DicSvc.XLate("Location Name")');
  }

  function getLinkedBedsGridRowIndex(data) {
    return getGridRowIndex("#linked-bed-grid", data);
  }

</script>

<div class="card h-90 " id="@strDialogID">
  <form asp-controller="Position" id="form_@Model.PositionCode" asp-action="SavePositionDetail"
        data-ajax-failure="OnFailure" data-ajax-success="OnSuccess"
        data-ajax="true" data-ajax-method="POST" data-ajax-loading="progress">
    <div id="Results"></div>
    <div style="height:400px">
      <div style="width:55%; float:left;">
        @Html.HiddenFor(m => m.SavedPositionCode)
        <div class="row mt-2">
          <div class="col-md-2 u-col-h-fixed">
            @Html.LabelFor(m => m.PositionCode, new { @class = "field-required" })
          </div>
          <div class="col-md-9 ">
            @Html.Kendo().TextBoxFor(m => m.PositionCode).HtmlAttributes(new { @class = "k-input w-100", @maxlength = "50" })
          </div>
        </div>
        <style>
          .u-textarea-row-3 {
            height: 70px;
            max-height: 70px;
            min-height: 70px;
            margin-left: -15px;
            margin-right: -15px;
            width: 100%;
          }
        </style>

        <div class="row">
          <div class="col-md-2 u-col-h-fixed">
            @Html.LabelFor(m => m.Description)
          </div>
          <div class="col-md-9 ml-3 ">
            @Html.TextAreaFor(m => m.Description, new { @class = "k-textbox u-textarea-row-3 " })
          </div>
        </div>
      </div>
      <div style="width:43%; float:left;">
        <div style="float:left; width: 93%; margin-top: .5rem">
          @(Html.Kendo().Grid<ConfiguratorWeb.App.Models.BedViewModel>(Model.BedList)
      .Name("linked-bed-grid").HtmlAttributes(new { @class = "no-hover" })
      .Events(ev => ev.DataBound("onDataBoundBeds"))
      .Columns(columns =>
      {
        columns.Bound(e => e.BedId).Hidden().ClientTemplate("#= BedId #" + "<input type='hidden' name='BedList[#= getLinkedBedsGridRowIndex(data)#].BedId' value='#= BedId #' />");
        columns.Bound(e => e.IdLocation).Hidden().ClientTemplate("#= IdLocation #" + "<input type='hidden' name='BedList[#= getLinkedBedsGridRowIndex(data)#].IdLocation' value='#= IdLocation #' />").Visible(false);
        columns.Bound(e => e.Location.LocationName).ClientTemplate("#= Location.LocationName #" + "<input type='hidden' name='BedList[#= getLinkedBedsGridRowIndex(data)#].Location.LocationName' value='#= Location.LocationName #' />").Title(DicSvc.XLate("Location Name"));
        columns.Bound(e => e.BedName).ClientTemplate("#= BedName #" + "<input type='hidden' name='BedList[#= getLinkedBedsGridRowIndex(data)#].BedName' value='#= BedName #' /><input type='hidden' name='BedList[#= getLinkedBedsGridRowIndex(data)#].BedIndex' value='#= BedIndex #' />").Title(DicSvc.XLate("Bed Name"));
        columns.Bound(e => e.BedIndex).Visible(false);
      })
        .HtmlAttributes(new { style = "height:330px;" })
        .Sortable(false)
        .Scrollable()
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
          model.Id(p => p.BedId);
          model.Field(p => p.BedCode);
          model.Field(p => p.BedIndex);
          model.Field(p => p.BedLocation);
          model.Field(p => p.BedName);
          model.Field(p => p.Selected);
          model.Field(p => p.Location.LocationName);
          model.Field(p => p.Location.ID);
          model.Field(p => p.IdLocation);
          model.Field(p => p.PatientId);
          model.Field(p => p.RoomName);
        })
        .ServerOperation(false)
      ).NoRecords(x => x.Template("<div class='empty-grid'>" + DicSvc.XLate("No records found") + "</div>"))
          )
          <div class="row " style="padding-top: 11px;margin-bottom: 3px;">
          </div>
        </div>
        <div style="float:left; width:3%;padding-top: 10px;margin-left: 6px;">
          <span class="col-12 p-0 m-0">
            <button id="set-location" onclick="openBedSelection();" class="btn btn-default" type="button" data-toggle="tooltip" data-placement="top" title="@DicSvc.XLate("Set beds")"><span class="mdi mdi-bed-empty mdi-24px"></span></button>
          </span>
        </div>
      </div>
    </div>
  </form>
</div>
  <div class="card-footer h-10 p-0 m-0 mt-2 border-0 bg-white">
    @(Html.Kendo().ToolBar()
      .Name("toolbarDetail")
      .UmsDefaultErrors(DicSvc)
      .Items(
        items =>
        {
          items.Add().Type(CommandType.Button).Text(DicSvc.XLate("Delete")).Id("btnDelete").UmsHtmlButtonGeneric("modify-mode");
        }
      )
      .UmsDefaultSettings(DicSvc, "")
    )
  </div>


  <script type="text/javascript">
    function OnSuccess(response) {
      if (response.success) {
        $('#PositionEditWindow').data('kendoWindow').close();
        var grid = $("#position-grid").data("kendoGrid");
        grid.dataSource.read();
      }
      else {
        window.umsAlert("Error occured", response.errorMessage, 400, 300);
      }
    }
    function OnFailure(response) {
      window.umsAlert("Error occured", response.errorMessage, 400, 300);
    }

    function OnValidationPosition() {
      debugger;
      var validator = $("#form_@Model.PositionCode").kendoValidator({
        rules: {
          positionCodeRule: function (input) {
            if (input.is("[id=@Html.IdFor(m => m.PositionCode)]")) {
              return input.val().trim() !== '';
            }
            else {
              return true;
            }

          }
        },
        messages: {
          positionCodeRule: "Position Code is required."
        }
      }).data("kendoValidator");

      if (!validator.validate()) {
        var errors = validator.errors();
        $("#errors").html(buildValidationMessage(errors));
        return false;
      }
      else {
        $("#errors").html("");
      }
      return true;
    }

  </script>

  <script>
    function changeToEditMode() {

      actualmode = 2;
      $(".modify-mode").show();
      $(".view-mode").hide();

      toolBarAllEditSaveButton();
      toolBarShowButtonByClass("modify-mode");

      $('#@strDialogID :input').attr('disabled', false);
      $('#@Html.IdFor(m => m.PositionCode)').attr('readonly', true);
      $('#@strDialogID :input').each(function () {
          var cb = $(this).data("kendoDropDownList");
          if (cb) {
              cb.enable(true);
          }
      });
      $('#@strDialogID :input').each(function () {
          var cb = $(this).data("kendoNumericTextBox");
          if (cb) {
              cb.enable(true);
          }
      });
        $('#@strDialogID :input').each(function () {
          var cb = $(this).data("kendoTimePicker");
          if (cb) {
              cb.enable(true);
          }
      });
      if ('@Model.SavedPositionCode' === '') {
        $('#btnDelete').hide();
        $('#@Html.IdFor(m => m.PositionCode)').attr('readonly', false);
      }
    }

    function changeToViewMode() {
      actualmode = 1;
      $(".view-mode").show();
      $(".modify-mode").hide();
      toolBarAllEditSaveButton();
      toolBarShowButtonByClass("view-mode");
      $('#@strDialogID :input').attr('disabled', true);
      $('#@strDialogID :input').each(function () {
          var cb = $(this).data("kendoDropDownList");
          if (cb) {
              cb.enable(false);
          }
      });
      $('#@strDialogID :input').each(function () {
          var cb = $(this).data("kendoNumericTextBox");
          if (cb) {
              cb.enable(false);
          }
      });
      $('#@strDialogID :input').each(function () {
          var cb = $(this).data("kendoTimePicker");
          if (cb) {
              cb.enable(false);
          }
      });
    }

    var actualmode;
    function setWindowMode() {
      if ('@Model.SavedPositionCode') {
          actualmode = 1;
      } else {
          actualmode = 2;
      }
      setMode();
    }
    function setMode() {
      if (actualmode === 2)
          changeToEditMode();
      else
          changeToViewMode();
      dialog.center().resize();
    }

    function toolBarShowButtonByClass(clas) {
        var tb = $("#toolbarDetail").data("kendoToolBar");
        tb.umsShowButtonByClass(clas);
    }
    function toolBarAllEditSaveButton() {
        var tb = $("#toolbarDetail").data("kendoToolBar");
        tb.umsHideAllEditSaveButton();
    }
    var dialog = $("#PositionEditWindow").data("kendoWindow");
    dialog.bind("activate", setMode);
    dialog.bind("resize", setMode);
    $(document).ready(function () {
      setWindowMode();
      $('.btnEdit').off('click').on('click',function () {
          changeToEditMode();
      })
      $('.btnCancel').off('click').on('click',function () {
          var currentID = $('#Id').val();
          if (currentID && currentID != '0') {
              openDetail({ Id: $('#Id').val() });
          }
          else {
              dialog.close();
          }

      })
      $('.btnClose').off('click').on('click',function () {
          dialog.close();
          $(this).closest(".k-state-focused").focus();
      })

      $('#btnDelete').off('click').on('click',function () {
          umsConfirm('@DicSvc.XLate("Confirm Delete")', '@DicSvc.XLate("Do you really want to delete this Position item?")', deletePosition, cancelDeletePosition);
      });
      $('#btnSave').off('click').on('click',function () {
        if (OnValidationPosition()) {
          $('#linked-bed-grid').attr('id', 'Bed');
          $("#form_@Model.PositionCode").submit();
          $("#form_@Model.PositionCode").find("#Bed").attr('id', 'linked-bed-grid');
        }
      });
    });

    function deletePosition() {
      $.ajax({
          url: '@Url.Action("DeletePosition", "Position")',
          type: 'POST',
          data: { positionCode : '@Model.SavedPositionCode' },
          async: false

      }).done(function (data) {
          if (data.success) {
            $('#PositionEditWindow').data('kendoWindow').close();
            var grid = $("#" + gridIdName).data("kendoGrid");
            grid.dataSource.read();
          }
          else {
            umsErrorDialog("Error occured", data.errorMessage, 200, 200);
        }
        }).fail(function (response) {
          umsErrorDialog("Error occured", response.errorMessage, 200, 200);
      });
    }

    function cancelDeletePosition() {
        /* do nothing */
    }

  </script>
